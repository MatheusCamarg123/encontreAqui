<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>